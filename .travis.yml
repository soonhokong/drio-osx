language: objective-c

env:
  matrix:
    - CMAKE_CXX_COMPILER=g++-4.8 CMAKE_C_COMPILER=gcc-4.8
      CMAKE_BUILD_TYPE=Release
      CTEST=TRUE
    - CMAKE_CXX_COMPILER=g++-4.8 CMAKE_C_COMPILER=gcc-4.8
      CMAKE_BUILD_TYPE=Debug
      CTEST=TRUE
    - CMAKE_CXX_COMPILER=clang++ CMAKE_C_COMPILER=clang
      CMAKE_BUILD_TYPE=Release
      CTEST=TRUE
    - CMAKE_CXX_COMPILER=clang++ CMAKE_C_COMPILER=clang
      CMAKE_BUILD_TYPE=Debug
      CTEST=TRUE

install:
 - brew update
 - brew --config
 - brew --env
 - if [[ ${CMAKE_CXX_COMPILER} == g++-4.8 ]]; then
      brew install gcc;
      brew link gcc;
      COMPILER=g++-4.8.3;
   fi
 - if [[ ${CMAKE_CXX_COMPILER} == clang++ ]]; then
      wget https://dl.dropboxusercontent.com/u/203889738/gcc/clang+llvm-3.4.1-x86_64-apple-darwin10.9.tar.xz;
      sudo tar xfz clang+llvm-3.4.1-x86_64-apple-darwin10.9.tar.xz -C /;
      sudo chown -R `whoami` /usr/bin;
      export LIBRARY_PATH=/usr/lib:/usr/local/lib;
      COMPILER=clang++-3.4.1;
   fi
 # autoconf automake cmake libtool pkg-config
 - brew install autoconf automake cmake ninja libtool pkg-config

before_script:
  - SITE=OSX10.9.2@Travis
  - BUILD_NAME=${TRAVIS_BRANCH}_${COMPILER}_${CMAKE_BUILD_TYPE}
  - GIT_SUBJECT=`git log HEAD~ --oneline -n 1 | cut -d ' ' -f 2-`
  - GIT_SUBJECT=${GIT_SUBJECT//\"/\\\"}
  - GIT_SUBJECT=${GIT_SUBJECT//,/\,}
  - GIT_SUBJECT=$(echo -e $(printf '%q' "$GIT_SUBJECT"))

script:
  # compile drio
  - mkdir build
  - cd build
  - cmake -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER} -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER} -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -G Ninja ../src
  - CONFIG_FILE=DartConfiguration.tcl
  - sed -i "" "s/^Site:.*/Site:$SITE/" $CONFIG_FILE
  - sed -i "" "s/BuildName:.*/BuildName:$BUILD_NAME/" $CONFIG_FILE
  - ctest -D ExperimentalConfigure
  - sed -i "" "s/^Site:.*/Site:$SITE/" $CONFIG_FILE
  - sed -i "" "s/BuildName:.*/BuildName:$BUILD_NAME/" $CONFIG_FILE
  - ctest -D ExperimentalBuild -VV
  - cd ..

after_script:
  - cd build
  - if [[ $CTEST == TRUE ]]; then
      ctest -D ExperimentalTest -L normal --timeout 250 -VV;
    fi
  - find Testing -name "*.xml" -exec sed -i "" "s,Generator=\".*\",Generator=\"${TRAVIS_COMMIT}###${GIT_SUBJECT}\"," {} ";"
  - find Testing \( -name "LastTest_*.log" -o -name "LastDynamicAnalysis_*.log" \) -exec sh -c 'TMP=`mktemp /tmp/ctesttmp_XXXX`; ../script/demangle_cpptype.py {} > $TMP; mv -v $TMP {}' ";"
  - ctest -D ExperimentalSubmit
  - cd ..

notifications:
  email:
    recipients:
     - drio-build@googlegroups.com
    on_success: change
    on_failure: always
